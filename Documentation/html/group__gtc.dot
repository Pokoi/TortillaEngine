digraph "GTC Extensions (Stable)"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=box];
  rankdir=LR;
  Node12 [label="GLM_GTC_noise",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtc__noise.html",tooltip=" "];
  Node1 [label="GTC Extensions (Stable)",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="Functions and types that the GLSL specification doesn't define, but useful to have for a C++ program."];
  Node16 [label="GLM_GTC_reciprocal",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtc__reciprocal.html",tooltip="Define secant, cosecant and cotangent functions."];
  Node5 [label="GLM_GTC_epsilon",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtc__epsilon.html",tooltip="Comparison functions for a user defined epsilon values."];
  Node15 [label="GLM_GTC_random",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtc__random.html",tooltip="Generate random number from various distribution methods."];
  Node10 [label="GLM_GTC_matrix_inverse",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtc__matrix__inverse.html",tooltip=" "];
  Node21 [label="GLM_GTC_ulp",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtc__ulp.html",tooltip="Allow the measurement of the accuracy of a function against a reference implementation...."];
  Node9 [label="GLM_GTC_matrix_integer",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtc__matrix__integer.html",tooltip=" "];
  Node4 [label="GLM_GTC_constants",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtc__constants.html",tooltip="Provide a list of constants and precomputed useful values."];
  Node2 [label="GLM_GTC_bitfield",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtc__bitfield.html",tooltip="Allow to perform bit operations on integer values."];
  Node20 [label="GLM_GTC_type_ptr",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtc__type__ptr.html",tooltip="Handles the interaction between pointers and vector, matrix types."];
  Node22 [label="GLM_GTC_vec1",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtc__vec1.html",tooltip="Add vec1, ivec1, uvec1 and bvec1 types. <glm/gtc/vec1.hpp> need to be included to use these functiona..."];
  Node18 [label="GLM_GTC_type_aligned",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtc__type__aligned.html",tooltip="Aligned types. <glm/gtc/type_aligned.hpp> need to be included to use these features."];
  Node6 [label="GLM_GTC_functions",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtc__functions.html",tooltip="List of useful common functions."];
  Node7 [label="GLM_GTC_integer",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtc__integer.html",tooltip="Allow to perform bit operations on integer values."];
  Node13 [label="GLM_GTC_packing",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtc__packing.html",tooltip="This extension provides a set of function to convert vertors to packed formats."];
  Node11 [label="GLM_GTC_matrix_transform",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtc__matrix__transform.html",tooltip="Defines functions that generate common transformation matrices."];
  Node17 [label="GLM_GTC_round",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtc__round.html",tooltip="rounding value to specific boundings"];
  Node8 [label="GLM_GTC_matrix_access",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtc__matrix__access.html",tooltip=" "];
  Node14 [label="GLM_GTC_quaternion",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtc__quaternion.html",tooltip="Defines a templated quaternion type and several quaternion operations."];
  Node3 [label="GLM_GTC_color_space",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtc__color__space.html",tooltip="Allow to perform bit operations on integer values."];
  Node19 [label="GLM_GTC_type_precision",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtc__type__precision.html",tooltip="Defines specific C++-based precision types."];
  Node1->Node2 [shape=plaintext, dir="back", style="solid"];
  Node1->Node3 [shape=plaintext, dir="back", style="solid"];
  Node1->Node4 [shape=plaintext, dir="back", style="solid"];
  Node1->Node5 [shape=plaintext, dir="back", style="solid"];
  Node1->Node6 [shape=plaintext, dir="back", style="solid"];
  Node1->Node7 [shape=plaintext, dir="back", style="solid"];
  Node1->Node8 [shape=plaintext, dir="back", style="solid"];
  Node1->Node9 [shape=plaintext, dir="back", style="solid"];
  Node1->Node10 [shape=plaintext, dir="back", style="solid"];
  Node1->Node11 [shape=plaintext, dir="back", style="solid"];
  Node1->Node12 [shape=plaintext, dir="back", style="solid"];
  Node1->Node13 [shape=plaintext, dir="back", style="solid"];
  Node1->Node14 [shape=plaintext, dir="back", style="solid"];
  Node1->Node15 [shape=plaintext, dir="back", style="solid"];
  Node1->Node16 [shape=plaintext, dir="back", style="solid"];
  Node1->Node17 [shape=plaintext, dir="back", style="solid"];
  Node1->Node18 [shape=plaintext, dir="back", style="solid"];
  Node1->Node19 [shape=plaintext, dir="back", style="solid"];
  Node1->Node20 [shape=plaintext, dir="back", style="solid"];
  Node1->Node21 [shape=plaintext, dir="back", style="solid"];
  Node1->Node22 [shape=plaintext, dir="back", style="solid"];
}
